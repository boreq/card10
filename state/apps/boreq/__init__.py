import utime
import display
import leds
import ledfx
import buttons
import light_sensor
import ujson
import os

glenda_image = [
    [
        None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, [202, 172, 192], [223, 188, 212], [212, 177, 201], [101, 83, 95], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [223, 195, 214], [240, 208, 229], [238, 205, 227], [229, 195, 218], [232, 195, 220], [164, 136, 155], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [231, 202, 221], [240, 211, 230], [205, 179, 196], [201, 171, 189], [199, 169, 188], [233, 198, 222], [170, 143, 161], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [223, 196, 214], [241, 211, 231], [209, 183, 201], [127, 96, 105], [137, 95, 103], [193, 164, 182], [232, 198, 221], [132, 112, 126], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [154, 136, 148], [241, 212, 231], [235, 207, 225], [164, 136, 148], [118, 62, 65], [123, 87, 95], [213, 183, 201], [232, 201, 222], [89, 76, 85], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, [153, 136, 147], None, None, None, None, None, None, None, [238, 210, 229], [241, 213, 232], [230, 200, 219], [141, 104, 112], [107, 48, 50], [172, 134, 146], [225, 196, 214], [207, 180, 198], [0, 0, 0], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, [138, 123, 133], [225, 201, 217], [239, 213, 231], [231, 206, 223], [225, 200, 216], [146, 129, 140], None, None, None, None, [161, 141, 154], [242, 213, 232], [241, 213, 232], [190, 162, 177], [93, 37, 37], [120, 62, 65], [155, 127, 139], [233, 204, 223], [157, 137, 150], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        [146, 131, 141], [234, 210, 226], [244, 219, 236], [244, 218, 235], [239, 214, 231], [243, 217, 235], [222, 198, 214], [191, 170, 184], None, None, None, None, [210, 186, 202], [242, 214, 232], [229, 202, 220], [129, 99, 107], [103, 41, 41], [111, 60, 64], [199, 168, 183], [228, 200, 218], [177, 155, 170], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        [182, 163, 176], [244, 220, 236], [244, 219, 236], [223, 200, 215], [192, 171, 185], [221, 197, 212], [239, 213, 231], [243, 217, 235], [219, 195, 211], None, None, None, [113, 100, 109], [237, 210, 228], [242, 214, 233], [204, 176, 192], [124, 79, 84], [115, 53, 55], [124, 81, 87], [206, 179, 195], [239, 210, 229], [138, 121, 132], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        [174, 157, 169], [244, 220, 236], [244, 219, 236], [223, 201, 216], [100, 83, 90], [123, 96, 104], [186, 161, 174], [238, 213, 229], [242, 216, 234], [220, 197, 213], [132, 117, 127], None, None, [169, 150, 162], [242, 215, 233], [241, 213, 231], [153, 124, 134], [117, 71, 84], [71, 82, 132], [91, 126, 192], [71, 123, 197], [51, 130, 217], [51, 131, 217], [52, 131, 218], [53, 132, 218], [53, 132, 219], [53, 132, 218], [49, 121, 200], None, None, None, None, [5, 37, 94], None, None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, [231, 209, 224], [244, 220, 236], [244, 219, 236], [167, 145, 156], [127, 74, 77], [137, 93, 100], [187, 156, 168], [234, 207, 223], [244, 218, 235], [238, 213, 230], [157, 140, 151], None, None, [166, 148, 160], [155, 156, 201], [59, 125, 208], [63, 141, 235], [56, 145, 243], [56, 146, 244], [57, 147, 245], [58, 147, 245], [59, 148, 246], [59, 149, 246], [60, 149, 247], [61, 150, 248], [62, 151, 248], [62, 151, 249], [63, 152, 249], [62, 149, 245], [51, 128, 212], [38, 106, 180], [25, 93, 205], [24, 100, 236], [25, 105, 246], [19, 85, 203], None, None, None, None, None, None, None, None, None
    ],
    [
        None, [208, 188, 202], [243, 220, 236], [244, 220, 236], [220, 197, 212], [132, 102, 109], [128, 74, 77], [98, 41, 42], [160, 127, 136], [233, 204, 219], [244, 218, 235], [240, 215, 232], [173, 155, 167], [24, 77, 134], [48, 133, 227], [52, 142, 241], [53, 143, 242], [54, 144, 242], [54, 144, 243], [55, 145, 243], [56, 146, 244], [57, 146, 245], [57, 147, 245], [58, 148, 246], [59, 148, 246], [60, 149, 247], [60, 150, 247], [61, 150, 248], [62, 151, 248], [63, 152, 249], [63, 152, 249], [62, 151, 248], [56, 145, 244], [41, 122, 227], [26, 99, 219], [10, 55, 136], None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, [217, 196, 210], [244, 221, 237], [244, 221, 237], [212, 189, 202], [162, 128, 137], [109, 50, 52], [111, 51, 53], [129, 85, 91], [205, 177, 191], [236, 210, 227], [236, 211, 228], [144, 140, 169], [110, 158, 240], [63, 122, 201], [52, 142, 241], [53, 143, 241], [53, 143, 242], [54, 144, 243], [55, 145, 243], [56, 145, 244], [56, 146, 244], [57, 147, 245], [58, 147, 245], [59, 148, 246], [59, 149, 246], [60, 149, 247], [61, 150, 248], [61, 151, 248], [62, 151, 249], [63, 152, 249], [63, 152, 249], [60, 149, 247], [53, 143, 241], [44, 132, 230], [32, 109, 194], None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, [201, 182, 195], [245, 221, 237], [244, 221, 237], [222, 198, 213], [178, 142, 152], [110, 52, 53], [111, 49, 50], [124, 78, 83], [168, 141, 152], [230, 204, 220], [174, 162, 186], [108, 153, 232], [100, 142, 215], [38, 112, 195], [51, 142, 241], [52, 142, 241], [53, 143, 242], [54, 144, 242], [54, 144, 243], [55, 145, 243], [56, 146, 244], [57, 146, 244], [57, 147, 245], [58, 148, 246], [59, 148, 246], [60, 149, 247], [60, 150, 247], [61, 150, 248], [62, 151, 248], [63, 152, 249], [63, 152, 249], [62, 151, 249], [57, 146, 244], [49, 140, 239], [39, 126, 221], None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, [234, 212, 227], [245, 222, 237], [245, 221, 237], [226, 201, 216], [137, 108, 116], [122, 65, 68], [115, 53, 54], [124, 69, 72], [106, 85, 91], [126, 151, 216], [119, 168, 254], [102, 147, 232], [21, 91, 201], [50, 141, 240], [51, 141, 240], [52, 142, 241], [53, 143, 241], [53, 143, 242], [54, 144, 242], [55, 145, 243], [55, 145, 244], [56, 146, 244], [57, 147, 245], [58, 147, 245], [58, 148, 246], [59, 149, 246], [60, 149, 247], [61, 150, 247], [61, 151, 248], [62, 151, 249], [63, 152, 249], [63, 152, 250], [60, 150, 247], [53, 143, 242], [45, 133, 230], [24, 84, 150], None, None, None, None, None
    ],
    [
        None, None, None, None, None, [221, 201, 215], [245, 222, 238], [244, 221, 236], [205, 183, 197], [145, 116, 124], [110, 53, 55], [118, 63, 65], [90, 104, 154], [116, 162, 245], [114, 161, 244], [80, 124, 216], [21, 87, 188], [49, 140, 239], [50, 140, 239], [51, 141, 240], [51, 142, 241], [52, 142, 241], [53, 143, 242], [54, 144, 242], [90, 146, 231], [105, 151, 231], [57, 119, 199], [57, 146, 244], [57, 147, 245], [58, 148, 246], [59, 148, 246], [60, 149, 247], [60, 150, 247], [61, 150, 248], [62, 151, 248], [62, 152, 249], [63, 152, 249], [63, 152, 249], [57, 147, 245], [49, 137, 234], None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, [188, 171, 183], [243, 221, 236], [245, 222, 237], [227, 203, 217], [161, 128, 137], [105, 85, 111], [118, 163, 245], [119, 168, 254], [115, 163, 247], [29, 87, 209], [31, 107, 209], [48, 139, 238], [49, 139, 239], [49, 140, 239], [50, 141, 240], [51, 141, 240], [52, 142, 241], [52, 143, 241], [117, 164, 250], [119, 167, 254], [65, 105, 195], [55, 143, 240], [56, 146, 244], [57, 147, 245], [58, 147, 245], [58, 148, 246], [59, 149, 246], [60, 149, 247], [61, 150, 247], [61, 151, 248], [62, 151, 249], [63, 152, 249], [63, 152, 250], [61, 150, 248], [48, 128, 216], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, [127, 117, 129], [219, 199, 213], [238, 216, 231], [207, 186, 198], [103, 131, 193], [119, 168, 254], [119, 168, 254], [68, 111, 208], [9, 80, 201], [45, 133, 230], [47, 137, 237], [48, 138, 238], [48, 139, 238], [49, 139, 239], [50, 140, 239], [51, 141, 240], [51, 141, 240], [90, 145, 229], [100, 141, 215], [44, 105, 187], [54, 144, 243], [55, 145, 243], [49, 129, 217], [123, 149, 185], [116, 129, 140], [129, 138, 136], [156, 157, 122], [148, 148, 114], [146, 152, 139], [110, 128, 150], [106, 140, 186], [68, 134, 213], [63, 152, 249], [58, 141, 232], [39, 100, 166], None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, [93, 132, 199], [135, 150, 203], [112, 158, 238], [116, 164, 248], [113, 160, 242], [73, 116, 207], [4, 78, 206], [38, 122, 221], [45, 136, 236], [46, 136, 236], [46, 137, 237], [47, 138, 237], [48, 138, 238], [49, 139, 238], [49, 140, 239], [50, 140, 240], [51, 141, 240], [52, 142, 241], [51, 138, 234], [119, 143, 178], [166, 160, 99], [185, 176, 82], [152, 144, 67], [165, 153, 109], [175, 160, 137], [198, 178, 166], [186, 166, 170], [182, 166, 141], [170, 155, 132], [154, 146, 70], [108, 103, 46], [117, 117, 85], [126, 137, 139], [58, 104, 161], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [40, 69, 114], [110, 156, 238], [118, 166, 251], [119, 167, 252], [99, 142, 222], [43, 91, 199], [8, 80, 202], [34, 115, 212], [43, 134, 234], [44, 135, 235], [45, 135, 235], [45, 136, 236], [46, 137, 237], [47, 137, 237], [48, 138, 238], [48, 139, 238], [49, 139, 239], [50, 140, 239], [92, 138, 203], [155, 151, 94], [169, 160, 74], [169, 155, 125], [204, 182, 190], [235, 208, 225], [243, 215, 232], [243, 215, 232], [243, 214, 232], [243, 214, 232], [243, 214, 231], [242, 214, 231], [242, 214, 231], [220, 194, 209], [189, 170, 160], [122, 116, 53], [147, 140, 65], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [22, 88, 160], [25, 98, 180], [14, 68, 137], [2, 53, 145], [6, 70, 179], [22, 96, 201], [37, 124, 221], [41, 132, 233], [42, 133, 233], [43, 134, 234], [43, 134, 235], [44, 135, 235], [45, 136, 236], [46, 136, 236], [46, 137, 237], [47, 138, 237], [48, 138, 238], [65, 106, 164], [166, 158, 73], [174, 164, 96], [213, 191, 200], [244, 217, 234], [244, 217, 234], [244, 217, 233], [244, 216, 233], [244, 216, 233], [243, 215, 232], [243, 215, 232], [243, 214, 232], [243, 214, 232], [243, 214, 231], [242, 214, 231], [242, 214, 231], [151, 137, 156], [85, 112, 148], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [25, 97, 177], [33, 120, 215], [36, 128, 229], [37, 129, 230], [38, 129, 230], [39, 130, 231], [39, 131, 231], [40, 131, 232], [41, 132, 233], [41, 133, 233], [42, 133, 234], [43, 134, 234], [44, 135, 235], [44, 135, 235], [45, 136, 236], [44, 133, 230], [107, 119, 130], [167, 158, 74], [170, 158, 122], [237, 211, 227], [245, 219, 235], [245, 218, 234], [244, 218, 234], [244, 217, 234], [244, 217, 233], [244, 216, 233], [244, 216, 233], [244, 216, 233], [243, 215, 232], [243, 215, 232], [243, 214, 232], [243, 214, 231], [243, 214, 231], [219, 193, 209], [58, 119, 193], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [25, 100, 183], [34, 126, 228], [35, 127, 228], [36, 128, 229], [37, 128, 229], [37, 129, 230], [38, 130, 231], [39, 130, 231], [40, 131, 232], [40, 132, 232], [41, 132, 233], [42, 133, 233], [43, 134, 234], [43, 134, 234], [42, 131, 228], [106, 114, 118], [165, 156, 73], [193, 177, 158], [242, 216, 232], [245, 220, 235], [245, 219, 235], [245, 219, 235], [245, 219, 235], [245, 218, 234], [244, 218, 234], [244, 217, 234], [244, 217, 233], [244, 216, 233], [244, 216, 233], [243, 215, 233], [243, 215, 232], [243, 215, 232], [220, 194, 210], [225, 198, 214], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, [25, 102, 187], [33, 125, 227], [34, 126, 228], [35, 126, 228], [35, 127, 229], [36, 128, 229], [37, 129, 230], [38, 129, 230], [38, 130, 231], [39, 131, 231], [40, 131, 232], [41, 132, 232], [41, 133, 233], [42, 133, 234], [126, 132, 133], [169, 160, 75], [196, 180, 160], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 220, 235], [245, 219, 235], [245, 219, 235], [245, 218, 235], [245, 218, 234], [244, 218, 234], [244, 217, 234], [244, 217, 233], [244, 216, 233], [244, 216, 233], [243, 215, 232], [234, 207, 224], [215, 189, 205], [197, 173, 187], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [27, 112, 206], [32, 124, 226], [33, 125, 227], [34, 125, 227], [34, 126, 228], [35, 127, 228], [36, 127, 229], [37, 128, 229], [37, 129, 230], [38, 129, 231], [39, 130, 231], [40, 131, 232], [40, 131, 232], [42, 100, 172], [178, 169, 79], [178, 164, 139], [246, 222, 236], [246, 221, 236], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 220, 235], [245, 219, 235], [245, 219, 235], [245, 218, 234], [245, 218, 234], [244, 218, 234], [244, 217, 234], [244, 217, 233], [244, 216, 233], [230, 203, 220], [208, 184, 199], [163, 144, 155], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [21, 104, 195], [28, 121, 223], [31, 123, 225], [32, 124, 226], [33, 125, 227], [34, 126, 227], [35, 126, 228], [35, 127, 229], [36, 128, 229], [37, 128, 230], [38, 129, 230], [38, 130, 231], [36, 123, 218], [157, 149, 71], [162, 152, 92], [235, 213, 226], [246, 223, 237], [246, 222, 237], [246, 222, 236], [246, 221, 236], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 219, 235], [245, 218, 234], [245, 218, 234], [244, 217, 234], [237, 211, 227], [244, 216, 233], [209, 185, 199], [171, 151, 163], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [17, 100, 192], [24, 117, 220], [27, 119, 222], [29, 122, 224], [32, 124, 226], [33, 125, 227], [34, 125, 227], [34, 126, 228], [35, 127, 228], [36, 127, 229], [36, 128, 229], [37, 129, 230], [107, 122, 142], [166, 157, 73], [213, 194, 197], [247, 224, 238], [246, 223, 237], [246, 223, 237], [246, 223, 237], [246, 222, 236], [246, 222, 236], [245, 221, 236], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 219, 235], [245, 218, 234], [127, 112, 121], [144, 127, 138], [244, 217, 233], [203, 180, 193], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [14, 97, 189], [20, 113, 217], [22, 116, 219], [25, 118, 221], [28, 120, 223], [30, 123, 225], [32, 124, 226], [33, 125, 227], [34, 126, 227], [35, 126, 228], [35, 127, 228], [32, 117, 211], [167, 158, 74], [172, 160, 138], [247, 225, 238], [247, 225, 238], [247, 224, 238], [247, 224, 238], [246, 223, 237], [246, 223, 237], [246, 222, 237], [208, 188, 200], [124, 111, 119], [244, 220, 235], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 220, 235], [245, 219, 235], [245, 219, 235], [129, 114, 123], [169, 150, 161], [244, 217, 233], [170, 151, 162], None, None, None
    ],
    [
        None, None, None, None, None, None, None, [8, 83, 167], [15, 109, 214], [18, 112, 216], [21, 114, 218], [24, 117, 220], [26, 119, 222], [29, 121, 224], [31, 123, 225], [33, 125, 227], [33, 125, 227], [34, 126, 228], [106, 125, 156], [164, 156, 73], [223, 205, 213], [247, 226, 239], [247, 225, 239], [247, 225, 238], [247, 225, 238], [247, 224, 238], [247, 224, 238], [246, 223, 237], [172, 156, 166], [0, 0, 0], [226, 204, 217], [246, 221, 236], [245, 221, 236], [245, 221, 235], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 220, 235], [245, 219, 235], [245, 219, 235], [245, 218, 234], [168, 149, 160], None, None, None
    ],
    [
        None, None, None, None, None, None, [13, 69, 167], [14, 89, 196], [11, 106, 211], [14, 108, 213], [17, 110, 215], [19, 113, 217], [22, 115, 219], [25, 118, 221], [28, 120, 223], [30, 122, 225], [32, 124, 226], [33, 125, 227], [149, 146, 96], [174, 164, 101], [247, 227, 240], [247, 227, 239], [247, 226, 239], [247, 226, 239], [247, 225, 239], [247, 225, 238], [247, 224, 238], [247, 224, 238], [239, 217, 230], [205, 185, 197], [246, 223, 237], [246, 222, 237], [246, 222, 236], [246, 221, 236], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 219, 235], [245, 220, 235], [245, 219, 235], [137, 122, 130], None, None, None
    ],
    [
        None, None, None, None, None, None, [24, 103, 242], [20, 92, 215], [7, 102, 208], [10, 104, 210], [12, 107, 212], [15, 109, 214], [18, 112, 216], [21, 114, 218], [23, 116, 220], [26, 119, 222], [29, 121, 224], [31, 123, 225], [148, 140, 65], [173, 161, 137], [248, 228, 240], [247, 227, 240], [247, 227, 240], [247, 227, 239], [247, 226, 239], [247, 226, 239], [247, 225, 239], [247, 225, 238], [247, 224, 238], [247, 224, 238], [247, 223, 237], [246, 223, 237], [246, 223, 237], [246, 222, 237], [246, 222, 236], [246, 221, 236], [245, 221, 236], [245, 220, 235], [245, 220, 235], [245, 220, 235], [245, 220, 235], None, None, None, None
    ],
    [
        None, None, None, None, None, None, [22, 96, 227], [23, 99, 232], [9, 95, 205], [5, 101, 207], [8, 103, 209], [11, 105, 211], [14, 108, 213], [16, 110, 215], [19, 113, 217], [22, 115, 219], [24, 117, 221], [26, 115, 214], [176, 167, 78], [196, 182, 167], [248, 229, 241], [248, 228, 241], [247, 228, 240], [247, 227, 240], [247, 227, 240], [247, 226, 239], [247, 226, 239], [247, 226, 239], [247, 225, 238], [247, 225, 238], [247, 224, 238], [247, 224, 238], [246, 223, 237], [246, 223, 237], [205, 182, 194], [203, 166, 174], [170, 140, 147], [229, 206, 220], [245, 221, 236], [245, 220, 235], [245, 220, 235], [154, 137, 146], None, None, None
    ],
    [
        None, None, None, None, None, None, [17, 80, 192], [26, 108, 253], [13, 85, 196], [1, 97, 204], [4, 99, 206], [6, 102, 208], [9, 104, 210], [12, 107, 212], [15, 109, 214], [17, 111, 216], [20, 114, 217], [23, 116, 219], [142, 135, 62], [214, 198, 172], [247, 227, 240], [248, 229, 241], [248, 229, 241], [248, 228, 240], [247, 228, 240], [247, 227, 240], [247, 227, 240], [247, 226, 239], [247, 226, 239], [247, 225, 239], [247, 225, 238], [247, 225, 238], [242, 219, 233], [179, 162, 172], [168, 133, 139], [238, 189, 197], [185, 146, 153], [134, 120, 128], [231, 208, 221], [245, 221, 236], [245, 221, 236], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, [18, 84, 201], [10, 60, 148], [0, 96, 203], [0, 96, 203], [2, 98, 205], [5, 100, 207], [8, 103, 209], [10, 105, 210], [13, 108, 212], [16, 110, 214], [19, 112, 216], [152, 145, 69], [195, 180, 152], [247, 223, 238], [247, 225, 239], [248, 227, 240], [248, 229, 241], [248, 229, 241], [248, 228, 240], [247, 228, 240], [247, 227, 240], [247, 227, 240], [247, 226, 239], [247, 226, 239], [247, 225, 239], [172, 157, 166], [147, 133, 141], [150, 133, 141], [134, 105, 110], [135, 116, 123], [123, 111, 118], [158, 143, 152], [246, 222, 236], [246, 221, 236], [125, 111, 118], None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [0, 78, 167], [0, 96, 203], [0, 96, 203], [1, 97, 204], [3, 99, 205], [6, 101, 207], [9, 104, 209], [12, 106, 211], [14, 109, 213], [139, 141, 124], [178, 164, 128], [246, 220, 236], [247, 222, 237], [247, 224, 238], [247, 226, 239], [248, 228, 240], [248, 229, 241], [248, 228, 241], [248, 228, 240], [247, 228, 240], [247, 227, 240], [247, 227, 239], [247, 226, 239], [102, 93, 99], [206, 187, 199], [223, 203, 215], [114, 103, 109], [182, 165, 176], [192, 174, 185], [105, 95, 101], [239, 216, 230], [246, 222, 237], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [0, 43, 97], [0, 96, 202], [0, 96, 203], [0, 96, 203], [0, 96, 203], [2, 98, 204], [5, 100, 206], [7, 103, 208], [10, 105, 210], [115, 130, 161], [180, 171, 80], [232, 205, 222], [246, 218, 236], [246, 220, 237], [247, 222, 238], [247, 224, 239], [247, 226, 240], [248, 228, 240], [248, 229, 241], [248, 228, 241], [247, 228, 240], [247, 227, 240], [247, 227, 240], [146, 134, 142], [168, 154, 163], [218, 199, 211], [121, 110, 116], [161, 150, 156], [158, 143, 152], [152, 138, 147], [247, 223, 237], [240, 218, 231], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [0, 78, 167], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [1, 97, 204], [3, 99, 205], [6, 101, 207], [18, 98, 197], [176, 167, 78], [215, 192, 186], [245, 215, 234], [245, 217, 235], [246, 219, 236], [246, 221, 237], [247, 223, 238], [247, 225, 239], [247, 227, 240], [248, 228, 241], [248, 229, 241], [248, 228, 240], [247, 228, 240], [236, 217, 230], [183, 168, 178], [133, 124, 130], [216, 215, 215], [255, 254, 254], [234, 213, 226], [247, 225, 238], [247, 224, 238], [224, 203, 215], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [0, 55, 120], [0, 62, 134], [0, 87, 185], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [2, 98, 204], [4, 100, 206], [145, 147, 132], [184, 170, 123], [243, 212, 232], [244, 214, 233], [245, 215, 234], [245, 217, 235], [246, 219, 236], [247, 221, 237], [247, 223, 238], [247, 225, 239], [247, 227, 240], [248, 229, 241], [248, 229, 241], [248, 228, 240], [247, 227, 240], [191, 179, 187], [253, 252, 252], [255, 254, 254], [247, 226, 239], [247, 226, 239], [247, 225, 238], [191, 174, 184], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [0, 45, 100], [0, 74, 157], [0, 60, 130], [0, 90, 191], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [1, 97, 203], [58, 101, 181], [170, 161, 75], [220, 191, 204], [243, 211, 231], [244, 212, 232], [244, 214, 233], [245, 216, 234], [245, 218, 235], [246, 220, 236], [247, 221, 237], [247, 223, 238], [247, 225, 239], [248, 227, 240], [248, 229, 241], [248, 228, 241], [234, 215, 227], [234, 229, 232], [237, 227, 233], [247, 227, 240], [247, 226, 239], [247, 226, 239], [178, 162, 171], [80, 105, 135], None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [0, 46, 102], [0, 60, 130], [0, 79, 166], [0, 73, 155], [0, 73, 157], [0, 90, 191], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [0, 96, 203], [115, 121, 129], [181, 165, 124], [242, 207, 229], [242, 209, 230], [243, 211, 231], [244, 213, 232], [244, 214, 233], [245, 216, 234], [246, 218, 235], [246, 220, 236], [247, 222, 237], [247, 224, 238], [247, 226, 239], [248, 228, 240], [248, 229, 241], [248, 228, 241], [248, 228, 240], [247, 228, 240], [247, 227, 240], [240, 220, 233], [119, 126, 149], [88, 124, 168], None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [0, 42, 95], [0, 50, 109], [0, 50, 110], [0, 59, 128], [0, 77, 162], [0, 74, 157], [0, 66, 142], [0, 79, 170], [0, 89, 189], [0, 96, 203], [0, 96, 203], [51, 102, 192], [184, 175, 82], [204, 179, 175], [241, 206, 229], [242, 208, 230], [243, 210, 231], [243, 211, 232], [244, 213, 233], [244, 215, 234], [245, 216, 235], [246, 218, 236], [246, 220, 237], [247, 222, 238], [247, 224, 239], [247, 226, 240], [248, 228, 241], [248, 229, 241], [248, 228, 241], [235, 216, 228], [160, 168, 198], [65, 105, 163], [0, 69, 147], None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [0, 67, 143], [0, 75, 160], [0, 66, 141], [0, 41, 92], [0, 72, 153], [0, 79, 167], [0, 79, 167], [0, 68, 145], [0, 67, 144], [0, 68, 146], [0, 77, 165], [121, 123, 118], [159, 151, 70], [170, 162, 191], [209, 181, 206], [241, 206, 229], [242, 208, 230], [243, 210, 231], [243, 212, 232], [244, 213, 233], [245, 215, 234], [245, 217, 235], [246, 219, 236], [246, 221, 237], [247, 223, 238], [247, 225, 239], [234, 215, 227], [191, 189, 212], [95, 125, 169], [0, 64, 138], [0, 79, 167], [0, 69, 148], [0, 36, 83], None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, [109, 90, 119], [2, 62, 134], [0, 77, 163], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 74, 157], [118, 118, 100], [61, 72, 98], [75, 110, 156], [84, 116, 163], [144, 148, 180], [148, 149, 179], [179, 172, 201], [191, 182, 211], [195, 191, 222], [199, 201, 239], [186, 194, 232], [155, 162, 194], [132, 136, 194], [76, 100, 175], [0, 87, 186], [0, 62, 133], [0, 77, 163], [0, 75, 159], [0, 56, 122], [0, 64, 136], [0, 60, 129], None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, [188, 150, 177], [218, 174, 205], [170, 137, 165], [149, 127, 171], [23, 67, 140], [0, 76, 162], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 76, 161], [0, 75, 159], [0, 71, 151], [0, 69, 147], [0, 68, 146], [0, 68, 145], [0, 68, 145], [0, 60, 132], [0, 74, 158], [0, 63, 135], [0, 78, 164], [0, 79, 167], [0, 63, 135], [0, 77, 163], [0, 70, 148], None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, [198, 158, 186], [235, 188, 221], [235, 188, 221], [235, 188, 221], [222, 177, 208], [185, 147, 174], [143, 118, 151], [124, 109, 154], [88, 89, 145], [0, 68, 147], [0, 75, 159], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 79, 167], [0, 78, 165], [9, 66, 139], [55, 67, 112], None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, [221, 177, 208], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [225, 180, 212], [210, 168, 197], [193, 154, 182], [179, 143, 169], [151, 125, 162], [122, 104, 141], [107, 100, 150], [90, 91, 145], [42, 66, 127], [0, 60, 130], [0, 68, 146], [0, 68, 147], [0, 68, 147], [0, 68, 147], [0, 68, 147], [28, 73, 149], [98, 102, 157], [71, 82, 134], [146, 133, 161], [187, 166, 181], [150, 133, 144], None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, [224, 179, 210], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [231, 185, 217], [232, 186, 218], [230, 185, 217], [227, 184, 215], [222, 181, 210], [221, 182, 209], [225, 187, 214], [214, 178, 203], [215, 181, 205], [226, 191, 215], [228, 195, 218], [227, 195, 217], [238, 205, 228], [235, 205, 226], [221, 194, 213], [195, 172, 188], None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, [12, 4, 4], [196, 155, 182], [233, 186, 218], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [236, 190, 222], [236, 192, 223], [237, 194, 224], [237, 196, 225], [238, 198, 226], [239, 200, 227], [239, 202, 228], [240, 203, 229], [241, 205, 230], [241, 207, 231], [239, 207, 229], [169, 146, 162], None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [38, 14, 14], [38, 14, 14], [151, 116, 136], [229, 181, 213], [234, 187, 220], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 189, 221], [236, 190, 222], [236, 192, 223], [237, 194, 224], [238, 196, 225], [238, 198, 226], [239, 200, 227], [239, 202, 228], [240, 204, 229], [219, 187, 209], [136, 116, 130], None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [59, 23, 23], [68, 27, 27], [79, 53, 62], [200, 156, 183], [233, 186, 218], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 189, 221], [236, 190, 222], [236, 192, 223], [237, 194, 224], [238, 196, 225], [238, 198, 226], [222, 186, 211], [190, 160, 181], None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, [41, 15, 15], [69, 27, 27], [83, 33, 33], [101, 61, 70], [106, 77, 91], [227, 179, 210], [234, 187, 219], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 189, 222], [236, 191, 222], [237, 193, 223], [215, 177, 204], [188, 156, 179], [115, 95, 109], None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, [54, 20, 20], [78, 31, 31], [90, 36, 36], [79, 32, 32], [98, 64, 74], [134, 103, 121], [230, 182, 214], [234, 187, 220], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [229, 184, 216], [193, 156, 182], [178, 145, 168], None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [57, 22, 22], [74, 30, 30], [77, 31, 31], [62, 26, 27], [58, 36, 42], [178, 140, 164], [233, 186, 219], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [230, 184, 216], [196, 156, 184], [216, 173, 203], [203, 162, 191], [63, 49, 59], None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, [41, 16, 16], [48, 19, 19], [52, 21, 21], [45, 18, 18], [27, 11, 11], [8, 3, 3], [134, 106, 126], [225, 180, 212], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [234, 188, 220], [231, 185, 217], [221, 177, 208], [164, 131, 154], [155, 123, 146], [224, 179, 210], [230, 184, 216], [127, 100, 119], None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [173, 138, 162], [209, 167, 196], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [229, 183, 215], [235, 188, 221], [234, 187, 220], [233, 187, 220], [232, 186, 219], [231, 184, 217], [209, 167, 197], [147, 117, 138], [213, 170, 200], [235, 188, 221], [233, 186, 219], [136, 108, 128], None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [159, 126, 149], [190, 152, 179], [212, 170, 200], [234, 187, 220], [235, 188, 221], [235, 188, 221], [235, 188, 221], [230, 184, 216], [211, 168, 198], [193, 154, 182], [157, 125, 147], [209, 167, 196], [235, 188, 221], [235, 188, 221], [235, 188, 221], [214, 171, 201], [212, 169, 199], [235, 188, 221], [225, 180, 212], [159, 126, 149], None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [147, 117, 138], [207, 165, 194], [235, 188, 221], [235, 188, 221], [235, 188, 221], [235, 188, 221], [229, 183, 215], [188, 150, 176], [168, 134, 158], [235, 188, 221], [235, 188, 221], [235, 188, 221], [214, 171, 201], [175, 139, 164], [209, 167, 197], [169, 134, 158], None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [115, 91, 108], [164, 130, 154], [203, 162, 190], [221, 177, 208], [218, 174, 205], [159, 126, 149], [131, 104, 123], [222, 177, 208], [235, 188, 221], [224, 179, 211], [196, 157, 185], None, None, None, None, None, None, None, None, None, None, None
    ],
    [
        None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [185, 147, 174], [136, 108, 128], None, None, None, None, None, None, None, None, None, None, None, None
    ]
]

FILENAME = 'boreq.json'

WIDTH = 160
HEIGHT = 80

BLACK = [0, 0, 0]
WHITE = [255, 255, 255]


def leds_top():
    return range(11)


def leds_ambient():
    return range(11, 15)


class Flag:

    BI = [
        [214, 2, 112],
        [155, 79, 150],
        [0, 56, 168]
    ]

    RAINBOW = [
        [255, 0, 24],
        [255, 165, 44],
        [255, 255, 65],
        [0, 128, 24],
        [0, 0, 249],
        [134, 0, 125]
    ]


class Mode:

    NICK = 'nick'
    RAINBOW = 'rainbow'
    FLASHLIGHT = 'flashlight'


class Buttons:

    def __init__(self):
        self.right_bottom = False
        self.right_bottom_once = False

        self.right_top = False
        self.right_top_once = False

    def update(self):
        now_right_bottom = buttons.read(buttons.BOTTOM_RIGHT)

        self.right_bottom_once = not self.right_bottom and now_right_bottom
        self.right_bottom = now_right_bottom

        now_right_top = buttons.read(buttons.TOP_RIGHT)

        self.right_top_once = not self.right_top and now_right_top
        self.right_top = now_right_top


class Counter:

    def __init__(self, every):
        self.counter = 0
        self.every = every

    def update(self, dt):
        self.counter += dt
        if self.counter >= self.every:
            self.counter = 0
            return True
        return False


class Manager:

    def __init__(self, nickname, debug):
        self.nickname = nickname
        self.debug = debug

        self.set_mode(Mode.NICK)
        self.renderers = self.get_renderers()

        self.buttons = Buttons()

        self.dt = 0.033

        self.update_sensors()
        self.sensors_counter = Counter(1)

    def cleanup(self):
        leds.clear()
        leds.set_powersave(True)

        leds.dim_top(1)
        leds.dim_bottom(1)

        for i in range(3):
            leds.set_rocket(i, 0)

        leds.update()

        with display.open() as disp:
            disp.clear().update()
            disp.close()

    def get_renderers(self):
        nickname = NicknameRenderer(self.nickname)
        glenda = ImageRenderer()
        rainbow = RainbowRenderer()
        flashlight = FlashlightRenderer()
        battery = BatteryRenderer()
        debug = DebugRenderer()

        renderers = {
            Mode.NICK: [nickname, glenda],
            Mode.RAINBOW: [rainbow],
            Mode.FLASHLIGHT: [flashlight],
        }

        if self.debug:
            renderers[Mode.NICK].append(debug)

        return renderers

    def update_sensors(self):
        light_level = light_sensor.get_reading()
        battery_voltage = os.read_battery()
        self.sensors = Sensors(light_level, battery_voltage)

    def set_mode(self, mode):
        self.cleanup()
        self.modes = [mode]

    def process_mode_changes(self):
        if self.buttons.right_bottom_once:
            if Mode.NICK in self.modes:
                self.set_mode(Mode.RAINBOW)
            else:
                self.set_mode(Mode.NICK)

        if self.buttons.right_top_once:
            if Mode.FLASHLIGHT in self.modes:
                self.set_mode(Mode.NICK)
            else:
                self.set_mode(Mode.FLASHLIGHT)

    def run(self):
        while True:
            self.buttons.update()
            self.process_mode_changes()
            if self.sensors_counter.update(self.dt):
                self.update_sensors()

            with display.open() as disp:
                for mode in self.modes:
                    for renderer in self.renderers[mode]:
                        renderer.render(disp, self.dt, self.sensors)
                disp.update()
                disp.close()

            utime.sleep(self.dt)


class Sensors:

    def __init__(self, light_level, battery_voltage):
        self.light_level = light_level
        self.battery_voltage = battery_voltage

    def is_dark(self):
        return self.light_level < 50

    def is_low(self):
        return self.battery_voltage < 3.5


class Renderer:

    def render(self, disp, dt, sensors):
        render_error('not', 'implemented')


class BatteryRenderer(Renderer):

    change_every = 0.1

    def __init__(self):
        self.enabled = False
        self.counter = 0

    def render(self, disp, dt, sensors):
        if sensors.is_low():
            self.counter += dt
            if self.counter > self.change_every:
                self.counter = 0
                self.enabled = not self.enabled

            col = [255, 0, 0] if self.enabled else BLACK
            for i in leds_top():
                leds.prep(i, col)

            leds.update()


class NicknameRenderer(Renderer):

    change_every = 1

    def __init__(self, nickname):
        self.nickname = nickname
        self.color_index = 0
        self.counter = 0
        self.rocket = [True, False, False]

    def render(self, disp, dt, sensors):
        self.counter += dt
        if self.counter > self.change_every:
            self.counter = 0

            self.color_index += 1
            if self.color_index >= len(Flag.RAINBOW):
                self.color_index = 0

            rocket_state = self.rocket.pop(0)
            self.rocket.append(rocket_state)

        col = Flag.RAINBOW[self.color_index]
        disp.rect(0, 0, WIDTH, HEIGHT, col=col, filled=True)
        disp.print(self.nickname, posx=HEIGHT - round(len(self.nickname) / 2 * 14), posy=30, bg=col)

        if sensors.is_dark():
            for i, state in enumerate(self.rocket):
                leds.set_rocket(i, 31 if state else 0)

            for i in leds_top():
                leds.prep(i, col)

            for i in leds_ambient():
                leds.prep(i, col)
        else:
            for i in range(3):
                leds.set_rocket(i, 0)

            for i in leds_top():
                leds.prep(i, BLACK)

            for i in leds_ambient():
                leds.prep(i, BLACK)

        leds.update()


class ImageRenderer(Renderer):

    def __init__(self):
        self.x = 10
        self.y = 0
        self.down = True

    def render(self, disp, dt, sensors):
        if self.down:
            self.y -= 1
        else:
            self.y += 1

        if self.y >= 20:
            self.down = True

        if self.y <= 0:
            self.down = False

        for j, row in enumerate(glenda_image):
            for i, pixel in enumerate(row):
                if pixel is not None:
                    disp.pixel(self.x + i, self.y + j, col=pixel)


class DebugRenderer(Renderer):

    def render(self, disp, dt, sensors):
        s = '{0:>3} {1:>3}'.format(sensors.light_level, sensors.battery_voltage)
        disp.print(s, posx=0, posy=0)


class FlashlightRenderer(Renderer):

    def __init__(self):
        pass

    def render(self, disp, dt, sensors):
        for i in leds_top():
            leds.prep(i, WHITE)

        for i in leds_ambient():
            leds.prep(i, WHITE)

        leds.dim_top(8)
        leds.dim_bottom(8)

        leds.update()

        disp.rect(0, 0, WIDTH, HEIGHT, col=WHITE, filled=True)


class RainbowRenderer(Renderer):

    change_every = 0.1

    def __init__(self):
        self.color_index = 0
        self.counter = 0

    def render(self, disp, dt, sensors):
        self.counter += dt
        if self.counter > self.change_every:
            self.counter = 0

            self.color_index += 1
            if self.color_index >= len(Flag.RAINBOW):
                self.color_index = 0

        for i in range(6):
            end_y = (i + 1) * 13 if i < 5 else HEIGHT
            col_index = i if self.color_index % 2 == 0 else len(Flag.RAINBOW) - 1 - i
            disp.rect(0, i * 13, WIDTH, end_y, col=Flag.RAINBOW[col_index], filled=True)

        col = Flag.RAINBOW[self.color_index]
        for i in leds_top():
            leds.prep(i, col)
        for i in leds_ambient():
            leds.prep(i, col)
        leds.update()


def render_error(err1, err2):
    with display.open() as disp:
        disp.clear()
        disp.print(err1, posx=80 - round(len(err1) / 2 * 14), posy=18)
        disp.print(err2, posx=80 - round(len(err2) / 2 * 14), posy=42)
        disp.update()
        disp.close()


def get_key(json, key, default):
    try:
        return json[key]
    except KeyError:
        return default


if FILENAME in os.listdir('.'):
    f = open(FILENAME, 'r')
    try:
        c = ujson.loads(f.read())
        f.close()

        nickname = get_key(c, 'nickname', 'no nick')
        debug = get_key(c, 'debug', False)

        manager = Manager(nickname, debug)
        manager.run()
    except ValueError:
        render_error('invalid', 'json')
else:
    render_error('file not', 'found')

